{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\desafio-digitalsys\\\\frontend\\\\src\\\\components\\\\CurriculoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DadosPessoais from './DadosPessoais';\nimport Contato from './Contato';\nimport ExperienciaProfissional from './ExperienciaProfissional';\nimport FormacaoAcademica from './FormacaoAcademica';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurriculoForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    dadosPessoais: {\n      nome: '',\n      data_nascimento: ''\n    },\n    contato: {\n      email: '',\n      telefone: '',\n      endereco: ''\n    },\n    experiencias: [{\n      cargo: '',\n      empresa: '',\n      data_inicio: '',\n      data_fim: '',\n      descricao: ''\n    }],\n    formacoes: [{\n      instituicao: '',\n      curso: '',\n      data_inicio: '',\n      data_fim: ''\n    }]\n  });\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validação de Dados Pessoais\n    if (!formData.dadosPessoais.nome.trim()) {\n      newErrors.nome = 'Nome é obrigatório';\n    }\n    if (!formData.dadosPessoais.data_nascimento) {\n      newErrors.data_nascimento = 'Data de nascimento é obrigatória';\n    }\n\n    // Validação de Contato\n    if (!formData.contato.email.trim()) {\n      newErrors.email = 'Email é obrigatório';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.contato.email)) {\n      newErrors.email = 'Email inválido';\n    }\n    if (!formData.contato.telefone.trim()) {\n      newErrors.telefone = 'Telefone é obrigatório';\n    }\n\n    // Validação de Experiência Profissional\n    if (formData.experiencias.length === 0 || !formData.experiencias[0].cargo.trim()) {\n      newErrors.experiencia = 'Pelo menos uma experiência profissional é obrigatória';\n    }\n\n    // Validação de Formação Acadêmica\n    if (formData.formacoes.length === 0 || !formData.formacoes[0].curso.trim()) {\n      newErrors.formacao = 'Pelo menos uma formação acadêmica é obrigatória';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        console.log('Enviando dados:', JSON.stringify(formData, null, 2));\n        const response = await fetch('http://localhost:8000/api/candidatos/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const responseData = await response.json();\n        console.log('Resposta do servidor:', responseData);\n        if (response.ok) {\n          alert('Currículo enviado com sucesso!');\n          // Limpar o formulário após o envio bem-sucedido\n          setFormData({\n            dadosPessoais: {\n              nome: '',\n              data_nascimento: ''\n            },\n            contato: {\n              email: '',\n              telefone: '',\n              endereco: ''\n            },\n            experiencias: [{\n              cargo: '',\n              empresa: '',\n              data_inicio: '',\n              data_fim: '',\n              descricao: ''\n            }],\n            formacoes: [{\n              instituicao: '',\n              curso: '',\n              data_inicio: '',\n              data_fim: ''\n            }]\n          });\n        } else {\n          alert(`Erro ao enviar o currículo. Detalhes: ${JSON.stringify(responseData)}`);\n        }\n      } catch (error) {\n        console.error('Erro ao enviar o currículo:', error);\n        alert(`Erro ao enviar o currículo. Detalhes: ${error.message}`);\n      }\n    } else {\n      alert('Por favor, corrija os erros no formulário antes de enviar.');\n    }\n  };\n  const updateFormData = (section, data) => {\n    setFormData(prevData => ({\n      ...prevData,\n      [section]: data\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(DadosPessoais, {\n      data: formData.dadosPessoais,\n      updateData: data => updateFormData('dadosPessoais', data),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contato, {\n      data: formData.contato,\n      updateData: data => updateFormData('contato', data),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExperienciaProfissional, {\n      data: formData.experiencias,\n      updateData: data => updateFormData('experiencias', data),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormacaoAcademica, {\n      data: formData.formacoes,\n      updateData: data => updateFormData('formacoes', data),\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar Curr\\xEDculo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(CurriculoForm, \"ojYELyUmXnouUfXBlQsbs5yEfD0=\");\n_c = CurriculoForm;\nexport default CurriculoForm;\n\n// Comentário: Adicionado mais logs e melhor tratamento de erros\nvar _c;\n$RefreshReg$(_c, \"CurriculoForm\");","map":{"version":3,"names":["React","useState","DadosPessoais","Contato","ExperienciaProfissional","FormacaoAcademica","jsxDEV","_jsxDEV","CurriculoForm","_s","formData","setFormData","dadosPessoais","nome","data_nascimento","contato","email","telefone","endereco","experiencias","cargo","empresa","data_inicio","data_fim","descricao","formacoes","instituicao","curso","errors","setErrors","validateForm","newErrors","trim","test","length","experiencia","formacao","Object","keys","handleSubmit","e","preventDefault","console","log","JSON","stringify","response","fetch","method","headers","body","responseData","json","ok","alert","error","message","updateFormData","section","data","prevData","onSubmit","children","updateData","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Dev/desafio-digitalsys/frontend/src/components/CurriculoForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DadosPessoais from './DadosPessoais';\r\nimport Contato from './Contato';\r\nimport ExperienciaProfissional from './ExperienciaProfissional';\r\nimport FormacaoAcademica from './FormacaoAcademica';\r\n\r\nconst CurriculoForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    dadosPessoais: { nome: '', data_nascimento: '' },\r\n    contato: { email: '', telefone: '', endereco: '' },\r\n    experiencias: [{ cargo: '', empresa: '', data_inicio: '', data_fim: '', descricao: '' }],\r\n    formacoes: [{ instituicao: '', curso: '', data_inicio: '', data_fim: '' }]\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validação de Dados Pessoais\r\n    if (!formData.dadosPessoais.nome.trim()) {\r\n      newErrors.nome = 'Nome é obrigatório';\r\n    }\r\n    if (!formData.dadosPessoais.data_nascimento) {\r\n      newErrors.data_nascimento = 'Data de nascimento é obrigatória';\r\n    }\r\n\r\n    // Validação de Contato\r\n    if (!formData.contato.email.trim()) {\r\n      newErrors.email = 'Email é obrigatório';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.contato.email)) {\r\n      newErrors.email = 'Email inválido';\r\n    }\r\n    if (!formData.contato.telefone.trim()) {\r\n      newErrors.telefone = 'Telefone é obrigatório';\r\n    }\r\n\r\n    // Validação de Experiência Profissional\r\n    if (formData.experiencias.length === 0 || !formData.experiencias[0].cargo.trim()) {\r\n      newErrors.experiencia = 'Pelo menos uma experiência profissional é obrigatória';\r\n    }\r\n\r\n    // Validação de Formação Acadêmica\r\n    if (formData.formacoes.length === 0 || !formData.formacoes[0].curso.trim()) {\r\n      newErrors.formacao = 'Pelo menos uma formação acadêmica é obrigatória';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        console.log('Enviando dados:', JSON.stringify(formData, null, 2));\r\n        const response = await fetch('http://localhost:8000/api/candidatos/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        console.log('Resposta do servidor:', responseData);\r\n\r\n        if (response.ok) {\r\n          alert('Currículo enviado com sucesso!');\r\n          // Limpar o formulário após o envio bem-sucedido\r\n          setFormData({\r\n            dadosPessoais: { nome: '', data_nascimento: '' },\r\n            contato: { email: '', telefone: '', endereco: '' },\r\n            experiencias: [{ cargo: '', empresa: '', data_inicio: '', data_fim: '', descricao: '' }],\r\n            formacoes: [{ instituicao: '', curso: '', data_inicio: '', data_fim: '' }]\r\n          });\r\n        } else {\r\n          alert(`Erro ao enviar o currículo. Detalhes: ${JSON.stringify(responseData)}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao enviar o currículo:', error);\r\n        alert(`Erro ao enviar o currículo. Detalhes: ${error.message}`);\r\n      }\r\n    } else {\r\n      alert('Por favor, corrija os erros no formulário antes de enviar.');\r\n    }\r\n  };\r\n\r\n  const updateFormData = (section, data) => {\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [section]: data\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <DadosPessoais \r\n        data={formData.dadosPessoais} \r\n        updateData={(data) => updateFormData('dadosPessoais', data)}\r\n        errors={errors}\r\n      />\r\n      <Contato \r\n        data={formData.contato} \r\n        updateData={(data) => updateFormData('contato', data)}\r\n        errors={errors}\r\n      />\r\n      <ExperienciaProfissional \r\n        data={formData.experiencias} \r\n        updateData={(data) => updateFormData('experiencias', data)}\r\n        errors={errors}\r\n      />\r\n      <FormacaoAcademica \r\n        data={formData.formacoes} \r\n        updateData={(data) => updateFormData('formacoes', data)}\r\n        errors={errors}\r\n      />\r\n      <button type=\"submit\">Enviar Currículo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CurriculoForm;\r\n\r\n// Comentário: Adicionado mais logs e melhor tratamento de erros\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,aAAa,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAG,CAAC;IAChDC,OAAO,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAClDC,YAAY,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC;IACxFC,SAAS,EAAE,CAAC;MAAEC,WAAW,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEL,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;EAC3E,CAAC,CAAC;EAEF,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;;IAEpB;IACA,IAAI,CAACrB,QAAQ,CAACE,aAAa,CAACC,IAAI,CAACmB,IAAI,CAAC,CAAC,EAAE;MACvCD,SAAS,CAAClB,IAAI,GAAG,oBAAoB;IACvC;IACA,IAAI,CAACH,QAAQ,CAACE,aAAa,CAACE,eAAe,EAAE;MAC3CiB,SAAS,CAACjB,eAAe,GAAG,kCAAkC;IAChE;;IAEA;IACA,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAACC,KAAK,CAACgB,IAAI,CAAC,CAAC,EAAE;MAClCD,SAAS,CAACf,KAAK,GAAG,qBAAqB;IACzC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACiB,IAAI,CAACvB,QAAQ,CAACK,OAAO,CAACC,KAAK,CAAC,EAAE;MACvDe,SAAS,CAACf,KAAK,GAAG,gBAAgB;IACpC;IACA,IAAI,CAACN,QAAQ,CAACK,OAAO,CAACE,QAAQ,CAACe,IAAI,CAAC,CAAC,EAAE;MACrCD,SAAS,CAACd,QAAQ,GAAG,wBAAwB;IAC/C;;IAEA;IACA,IAAIP,QAAQ,CAACS,YAAY,CAACe,MAAM,KAAK,CAAC,IAAI,CAACxB,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,CAACC,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE;MAChFD,SAAS,CAACI,WAAW,GAAG,uDAAuD;IACjF;;IAEA;IACA,IAAIzB,QAAQ,CAACe,SAAS,CAACS,MAAM,KAAK,CAAC,IAAI,CAACxB,QAAQ,CAACe,SAAS,CAAC,CAAC,CAAC,CAACE,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MAC1ED,SAAS,CAACK,QAAQ,GAAG,iDAAiD;IACxE;IAEAP,SAAS,CAACE,SAAS,CAAC;IACpB,OAAOM,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACG,MAAM,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIX,YAAY,CAAC,CAAC,EAAE;MAClB,IAAI;QACFY,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACnC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACjE,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEN,IAAI,CAACC,SAAS,CAACnC,QAAQ;QAC/B,CAAC,CAAC;QAEF,MAAMyC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAC1CV,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,YAAY,CAAC;QAElD,IAAIL,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,gCAAgC,CAAC;UACvC;UACA3C,WAAW,CAAC;YACVC,aAAa,EAAE;cAAEC,IAAI,EAAE,EAAE;cAAEC,eAAe,EAAE;YAAG,CAAC;YAChDC,OAAO,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEC,QAAQ,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAG,CAAC;YAClDC,YAAY,EAAE,CAAC;cAAEC,KAAK,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEC,WAAW,EAAE,EAAE;cAAEC,QAAQ,EAAE,EAAE;cAAEC,SAAS,EAAE;YAAG,CAAC,CAAC;YACxFC,SAAS,EAAE,CAAC;cAAEC,WAAW,EAAE,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEL,WAAW,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAG,CAAC;UAC3E,CAAC,CAAC;QACJ,CAAC,MAAM;UACL+B,KAAK,CAAC,yCAAyCV,IAAI,CAACC,SAAS,CAACM,YAAY,CAAC,EAAE,CAAC;QAChF;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDD,KAAK,CAAC,yCAAyCC,KAAK,CAACC,OAAO,EAAE,CAAC;MACjE;IACF,CAAC,MAAM;MACLF,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;EAED,MAAMG,cAAc,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACxChD,WAAW,CAACiD,QAAQ,KAAK;MACvB,GAAGA,QAAQ;MACX,CAACF,OAAO,GAAGC;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEpD,OAAA;IAAMsD,QAAQ,EAAEtB,YAAa;IAAAuB,QAAA,gBAC3BvD,OAAA,CAACL,aAAa;MACZyD,IAAI,EAAEjD,QAAQ,CAACE,aAAc;MAC7BmD,UAAU,EAAGJ,IAAI,IAAKF,cAAc,CAAC,eAAe,EAAEE,IAAI,CAAE;MAC5D/B,MAAM,EAAEA;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5D,OAAA,CAACJ,OAAO;MACNwD,IAAI,EAAEjD,QAAQ,CAACK,OAAQ;MACvBgD,UAAU,EAAGJ,IAAI,IAAKF,cAAc,CAAC,SAAS,EAAEE,IAAI,CAAE;MACtD/B,MAAM,EAAEA;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5D,OAAA,CAACH,uBAAuB;MACtBuD,IAAI,EAAEjD,QAAQ,CAACS,YAAa;MAC5B4C,UAAU,EAAGJ,IAAI,IAAKF,cAAc,CAAC,cAAc,EAAEE,IAAI,CAAE;MAC3D/B,MAAM,EAAEA;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5D,OAAA,CAACF,iBAAiB;MAChBsD,IAAI,EAAEjD,QAAQ,CAACe,SAAU;MACzBsC,UAAU,EAAGJ,IAAI,IAAKF,cAAc,CAAC,WAAW,EAAEE,IAAI,CAAE;MACxD/B,MAAM,EAAEA;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5D,OAAA;MAAQ6D,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX,CAAC;AAAC1D,EAAA,CAlHID,aAAa;AAAA6D,EAAA,GAAb7D,aAAa;AAoHnB,eAAeA,aAAa;;AAE5B;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}